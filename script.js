// Firebase Configuration
const firebaseConfig = {
    apiKey: "AIzaSyBwhLbKHuiNTqRzpngP_7I99TUTnFjKYkE",
    authDomain: "myhomework-app-fff5e.firebaseapp.com",
    projectId: "myhomework-app-fff5e",
    storageBucket: "myhomework-app-fff5e.firebasestorage.app",
    messagingSenderId: "1015046592053",
    appId: "1:1015046592053:web:d4d94c8727707cf4b1837c",
    measurementId: "G-XF37RLFB6E"
};

// Initialize Firebase
firebase.initializeApp(firebaseConfig);
const auth = firebase.auth();
const db = firebase.firestore();

let currentUser = null;

// Auth State Observer
auth.onAuthStateChanged((user) => {
    if (user) {
        currentUser = user;
        showDashboard();
        loadHomework();
    } else {
        currentUser = null;
        showAuth();
    }
});

// Show/Hide Sections
function showAuth() {
    document.getElementById('authSection').classList.remove('hidden');
    document.getElementById('dashboardSection').classList.add('hidden');
}

function showDashboard() {
    document.getElementById('authSection').classList.add('hidden');
    document.getElementById('dashboardSection').classList.remove('hidden');
    
    const displayName = currentUser.displayName || currentUser.email.split('@')[0];
    document.getElementById('welcomeMessage').innerHTML = `
        <div>üå∏ ‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ ${displayName}! üå∏</div>
        <div style="font-size: 0.9rem; margin-top: 8px; opacity: 0.9;">‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏á‡∏≤‡∏ô/‡∏Å‡∏≤‡∏£‡∏ö‡πâ‡∏≤‡∏ô‡∏Å‡∏±‡∏ô‡πÄ‡∏•‡∏¢!</div>
    `;
}

function showLogin() {
    document.getElementById('loginForm').classList.remove('hidden');
    document.getElementById('signupForm').classList.add('hidden');
    document.getElementById('forgotPasswordForm').classList.add('hidden');
    clearMessages();
}

function showSignup() {
    document.getElementById('loginForm').classList.add('hidden');
    document.getElementById('signupForm').classList.remove('hidden');
    document.getElementById('forgotPasswordForm').classList.add('hidden');
    clearMessages();
}

function showForgotPassword() {
    document.getElementById('loginForm').classList.add('hidden');
    document.getElementById('signupForm').classList.add('hidden');
    document.getElementById('forgotPasswordForm').classList.remove('hidden');
    clearMessages();
}

// Message Functions
function showError(message) {
    const errorDiv = document.getElementById('errorMessage');
    errorDiv.textContent = message;
    errorDiv.classList.remove('hidden');
    setTimeout(() => errorDiv.classList.add('hidden'), 5000);
}

function showSuccess(message) {
    const successDiv = document.getElementById('successMessage');
    successDiv.textContent = message;
    successDiv.classList.remove('hidden');
    setTimeout(() => successDiv.classList.add('hidden'), 3000);
}

function clearMessages() {
    document.getElementById('errorMessage').classList.add('hidden');
    document.getElementById('successMessage').classList.add('hidden');
}

// Authentication Functions
async function login() {
    const email = document.getElementById('loginEmail').value;
    const password = document.getElementById('loginPassword').value;

    if (!email || !password) {
        showError('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÅ‡∏•‡∏∞‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô');
        return;
    }

    try {
        await auth.signInWithEmailAndPassword(email, password);
        showSuccess('‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');
    } catch (error) {
        showError('‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á');
    }
}

async function signup() {
    const name = document.getElementById('signupName').value;
    const email = document.getElementById('signupEmail').value;
    const password = document.getElementById('signupPassword').value;

    if (!name || !email || !password) {
        showError('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô');
        return;
    }

    if (password.length < 6) {
        showError('‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 6 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£');
        return;
    }

    try {
        const userCredential = await auth.createUserWithEmailAndPassword(email, password);
        await userCredential.user.updateProfile({ displayName: name });
        showSuccess('‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');
    } catch (error) {
        if (error.code === 'auth/email-already-in-use') {
            showError('‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß');
        } else {
            showError('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å');
        }
    }
}

async function resetPassword() {
    const email = document.getElementById('forgotEmail').value;

    if (!email) {
        showError('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏µ‡πÄ‡∏°‡∏•');
        return;
    }

    try {
        await auth.sendPasswordResetEmail(email);
        showSuccess('‡∏™‡πà‡∏á‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏•‡πâ‡∏ß! üìß');
        
        setTimeout(() => {
            showSuccess('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏≠‡∏µ‡πÄ‡∏°‡∏• (‡∏£‡∏ß‡∏°‡∏ñ‡∏∂‡∏á‡πÉ‡∏ô Spam) ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏•‡∏¥‡∏Å‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏±‡πâ‡∏á‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà');
        }, 2000);
        
        setTimeout(() => {
            showLogin();
        }, 4000);
    } catch (error) {
        if (error.code === 'auth/user-not-found') {
            showError('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏ô‡∏µ‡πâ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö');
        } else {
            showError('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô');
        }
    }
}

async function logout() {
    await auth.signOut();
    // Clear form inputs
    document.getElementById('homeworkTitle').value = '';
    document.getElementById('homeworkSubject').value = '';
    document.getElementById('homeworkDescription').value = '';
    document.getElementById('homeworkAssignDate').value = '';
    document.getElementById('homeworkDueDate').value = '';
}

// Homework Functions
async function addHomework() {
    const title = document.getElementById('homeworkTitle').value;
    const subject = document.getElementById('homeworkSubject').value;
    const description = document.getElementById('homeworkDescription').value; // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á description
    const assignDate = document.getElementById('homeworkAssignDate').value;
    const dueDate = document.getElementById('homeworkDueDate').value;

    if (!title || !subject || !assignDate || !dueDate) {
        showError('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô');
        return;
    }

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏£‡∏π‡∏™‡∏±‡πà‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô‡∏ß‡∏±‡∏ô‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡πà‡∏á
    if (new Date(assignDate) > new Date(dueDate)) {
        showError('‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏£‡∏π‡∏™‡∏±‡πà‡∏á‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô‡∏ß‡∏±‡∏ô‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡πà‡∏á');
        return;
    }

    try {
        await db.collection('homework').add({
            title: title,
            subject: subject,
            description: description, // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å description
            assignDate: assignDate,
            dueDate: dueDate,
            userId: currentUser.uid,
            createdAt: firebase.firestore.FieldValue.serverTimestamp()
        });

        // Clear form
        document.getElementById('homeworkTitle').value = '';
        document.getElementById('homeworkSubject').value = '';
        document.getElementById('homeworkDescription').value = ''; // ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå description ‡∏î‡πâ‡∏ß‡∏¢
        document.getElementById('homeworkAssignDate').value = '';
        document.getElementById('homeworkDueDate').value = '';

        showSuccess('‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏á‡∏≤‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‚ú®');
        
        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô (optional)
        playSuccessSound();
        
        // ‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
        setTimeout(() => {
            loadHomework();
        }, 500);
    } catch (error) {
        console.error('Error adding homework:', error);
        showError('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏á‡∏≤‡∏ô');
    }
}

// ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô loadHomework - ‡∏•‡∏ö orderBy ‡∏≠‡∏≠‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡∏õ‡∏±‡∏ç‡∏´‡∏≤ index
async function loadHomework() {
    try {
        const snapshot = await db.collection('homework')
            .where('userId', '==', currentUser.uid)
            .get(); // ‡∏•‡∏ö orderBy ‡∏≠‡∏≠‡∏Å‡∏Å‡πà‡∏≠‡∏ô

        const homeworkCards = document.getElementById('homeworkCards');
        homeworkCards.innerHTML = '';

        if (snapshot.empty) {
            homeworkCards.innerHTML = `
                <div class="no-homework">
                    <div class="no-homework-icon">üìö‚ú®</div>
                    <p>‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏á‡∏≤‡∏ô/‡∏Å‡∏≤‡∏£‡∏ö‡πâ‡∏≤‡∏ô</p>
                    <p style="font-size: 0.9rem; margin-top: 5px; color: #cbd5e0;">‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡πÄ‡∏•‡∏¢!</p>
                </div>
            `;
            return;
        }

        // ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏õ‡πá‡∏ô array ‡πÅ‡∏•‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏•‡∏≥‡∏î‡∏±‡∏ö‡πÉ‡∏ô JavaScript
        const homeworkArray = [];
        snapshot.forEach((doc) => {
            homeworkArray.push({ id: doc.id, ...doc.data() });
        });

        // ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏ï‡∏≤‡∏°‡∏ß‡∏±‡∏ô‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡πà‡∏á
        homeworkArray.sort((a, b) => new Date(a.dueDate) - new Date(b.dueDate));

        // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏•‡∏≥‡∏î‡∏±‡∏ö‡πÅ‡∏•‡πâ‡∏ß
        homeworkArray.forEach((homework) => {
            const assignDate = new Date(homework.assignDate);
            const dueDate = new Date(homework.dueDate);
            const today = new Date();
            const diffTime = dueDate - today;
            const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));

            let dueDateText = '';
            let dueDateClass = '';

            if (diffDays < 0) {
                dueDateText = `‡πÄ‡∏Å‡∏¥‡∏ô‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÑ‡∏õ ${Math.abs(diffDays)} ‡∏ß‡∏±‡∏ô`;
                dueDateClass = 'style="color: #e53e3e; font-weight: 600;"';
            } else if (diffDays === 0) {
                dueDateText = '‡∏Ñ‡∏£‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ!';
                dueDateClass = 'style="color: #dd6b20; font-weight: 600;"';
            } else if (diffDays === 1) {
                dueDateText = '‡∏Ñ‡∏£‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏û‡∏£‡∏∏‡πà‡∏á‡∏ô‡∏µ‡πâ';
                dueDateClass = 'style="color: #d69e2e; font-weight: 600;"';
            } else {
                dueDateText = `‡∏≠‡∏µ‡∏Å ${diffDays} ‡∏ß‡∏±‡∏ô (${dueDate.toLocaleDateString('th-TH')})`;
            }

            // ‡∏™‡∏£‡πâ‡∏≤‡∏á HTML ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö description (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
            const descriptionHTML = homework.description && homework.description.trim() 
                ? `<div class="homework-description">${homework.description}</div>` 
                : '';

            const homeworkCard = document.createElement('div');
            homeworkCard.className = 'homework-card';
            homeworkCard.innerHTML = `
                <div class="homework-title">${homework.title}</div>
                <div class="homework-subject">${homework.subject}</div>
                ${descriptionHTML}
                <div class="homework-date">
                    üìù ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏£‡∏π‡∏™‡∏±‡πà‡∏á: ${assignDate.toLocaleDateString('th-TH')}
                </div>
                <div class="homework-date" ${dueDateClass}>
                    üìÖ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡πà‡∏á: ${dueDateText}
                </div>
                <div style="display: flex; gap: 10px; margin-top: 10px;">
                    <button class="btn-complete" onclick="completeHomework('${homework.id}')">
                        ‚úÖ ‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß
                    </button>
                    <button class="btn-edit" onclick="editHomework('${homework.id}')">
                        ‚úèÔ∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
                    </button>
                </div>
            `;
            
            homeworkCards.appendChild(homeworkCard);
        });
    } catch (error) {
        console.error('Error loading homework:', error);
        showError('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•');
    }
}

async function completeHomework(homeworkId) {
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏• animation
    const homeworkCard = document.querySelector(`button[onclick="completeHomework('${homeworkId}')"]`).closest('.homework-card');
    homeworkCard.style.opacity = '0.5';
    homeworkCard.style.transform = 'scale(0.95)';
    
    try {
        await db.collection('homework').doc(homeworkId).delete();
        showSuccess('‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß! üéâ');
        
        // ‡∏£‡∏≠‡πÅ‡∏≠‡∏ô‡∏¥‡πÄ‡∏°‡∏ä‡∏±‡πà‡∏ô‡∏à‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡πÇ‡∏´‡∏•‡∏î‡πÉ‡∏´‡∏°‡πà
        setTimeout(() => {
            loadHomework();
        }, 300);
    } catch (error) {
        // ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡∏´‡∏≤‡∏Å‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î
        homeworkCard.style.opacity = '1';
        homeworkCard.style.transform = 'scale(1)';
        showError('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏á‡∏≤‡∏ô');
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏á‡∏≤‡∏ô
async function editHomework(homeworkId) {
    try {
        // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏á‡∏≤‡∏ô‡∏à‡∏≤‡∏Å Firebase
        const doc = await db.collection('homework').doc(homeworkId).get();
        
        if (!doc.exists) {
            showError('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç');
            return;
        }
        
        const homework = doc.data();
        
        // ‡πÅ‡∏™‡∏î‡∏á Modal ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
        showEditModal(homeworkId, homework);
        
    } catch (error) {
        console.error('Error fetching homework:', error);
        showError('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•');
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á Modal ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
function showEditModal(homeworkId, homework) {
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á Modal
    const modal = document.createElement('div');
    modal.id = 'editModal';
    modal.innerHTML = `
        <div style="position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.5); z-index: 1000; display: flex; justify-content: center; align-items: center;">
            <div style="background: white; border-radius: 20px; padding: 30px; max-width: 400px; width: 90%; max-height: 80vh; overflow-y: auto;">
                <h2 style="text-align: center; margin-bottom: 25px; color: #9f7aea;">‚úèÔ∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏á‡∏≤‡∏ô/‡∏Å‡∏≤‡∏£‡∏ö‡πâ‡∏≤‡∏ô</h2>
                
                <div class="form-group">
                    <label>‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏ö‡πâ‡∏≤‡∏ô/‡∏á‡∏≤‡∏ô</label>
                    <input type="text" id="editTitle" value="${homework.title}" required>
                </div>
                
                <div class="form-group">
                    <label>‡∏ß‡∏¥‡∏ä‡∏≤</label>
                    <select id="editSubject" required>
                        <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤</option>
                        <option value="‡∏Ñ‡∏ì‡∏¥‡∏ï‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå" ${homework.subject === '‡∏Ñ‡∏ì‡∏¥‡∏ï‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå' ? 'selected' : ''}>‡∏Ñ‡∏ì‡∏¥‡∏ï‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå</option>
                        <option value="‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢" ${homework.subject === '‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢' ? 'selected' : ''}>‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢</option>
                        <option value="‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©" ${homework.subject === '‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©' ? 'selected' : ''}>‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©</option>
                        <option value="‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå" ${homework.subject === '‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå' ? 'selected' : ''}>‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå</option>
                        <option value="‡∏™‡∏±‡∏á‡∏Ñ‡∏°‡∏®‡∏∂‡∏Å‡∏©‡∏≤" ${homework.subject === '‡∏™‡∏±‡∏á‡∏Ñ‡∏°‡∏®‡∏∂‡∏Å‡∏©‡∏≤' ? 'selected' : ''}>‡∏™‡∏±‡∏á‡∏Ñ‡∏°‡∏®‡∏∂‡∏Å‡∏©‡∏≤</option>
                        <option value="‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå" ${homework.subject === '‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå' ? 'selected' : ''}>‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå</option>
                        <option value="‡∏ü‡∏¥‡∏™‡∏¥‡∏Å‡∏™‡πå" ${homework.subject === '‡∏ü‡∏¥‡∏™‡∏¥‡∏Å‡∏™‡πå' ? 'selected' : ''}>‡∏ü‡∏¥‡∏™‡∏¥‡∏Å‡∏™‡πå</option>
                        <option value="‡πÄ‡∏Ñ‡∏°‡∏µ" ${homework.subject === '‡πÄ‡∏Ñ‡∏°‡∏µ' ? 'selected' : ''}>‡πÄ‡∏Ñ‡∏°‡∏µ</option>
                        <option value="‡∏ä‡∏µ‡∏ß‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤" ${homework.subject === '‡∏ä‡∏µ‡∏ß‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤' ? 'selected' : ''}>‡∏ä‡∏µ‡∏ß‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤</option>
                        <option value="‡∏≠‡∏∑‡πà‡∏ô‡πÜ" ${homework.subject === '‡∏≠‡∏∑‡πà‡∏ô‡πÜ' ? 'selected' : ''}>‡∏≠‡∏∑‡πà‡∏ô‡πÜ</option>
                    </select>
                </div>
                
                <div class="form-group">
                    <label>‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î</label>
                    <textarea id="editDescription" rows="3" placeholder="‡πÉ‡∏™‡πà‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ç‡∏≠‡∏á‡∏á‡∏≤‡∏ô/‡∏Å‡∏≤‡∏£‡∏ö‡πâ‡∏≤‡∏ô (‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö)">${homework.description || ''}</textarea>
                </div>
                
                <div class="form-group">
                    <label>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏£‡∏π‡∏™‡∏±‡πà‡∏á</label>
                    <input type="date" id="editAssignDate" value="${homework.assignDate}" required>
                </div>
                
                <div class="form-group">
                    <label>‡∏ß‡∏±‡∏ô‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡πà‡∏á</label>
                    <input type="date" id="editDueDate" value="${homework.dueDate}" required>
                </div>
                
                <div style="display: flex; gap: 10px; margin-top: 20px;">
                    <button class="btn btn-primary" onclick="saveEditedHomework('${homeworkId}')" style="flex: 1;">
                        üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
                    </button>
                    <button class="btn btn-secondary" onclick="closeEditModal()" style="flex: 1;">
                        ‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
                    </button>
                </div>
            </div>
        </div>
    `;
    
    document.body.appendChild(modal);
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
async function saveEditedHomework(homeworkId) {
    const title = document.getElementById('editTitle').value;
    const subject = document.getElementById('editSubject').value;
    const description = document.getElementById('editDescription').value;
    const assignDate = document.getElementById('editAssignDate').value;
    const dueDate = document.getElementById('editDueDate').value;
    
    if (!title || !subject || !assignDate || !dueDate) {
        showError('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô');
        return;
    }
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏£‡∏π‡∏™‡∏±‡πà‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô‡∏ß‡∏±‡∏ô‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡πà‡∏á
    if (new Date(assignDate) > new Date(dueDate)) {
        showError('‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏£‡∏π‡∏™‡∏±‡πà‡∏á‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô‡∏ß‡∏±‡∏ô‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡πà‡∏á');
        return;
    }
    
    try {
        await db.collection('homework').doc(homeworkId).update({
            title: title,
            subject: subject,
            description: description,
            assignDate: assignDate,
            dueDate: dueDate,
            updatedAt: firebase.firestore.FieldValue.serverTimestamp()
        });
        
        showSuccess('‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏á‡∏≤‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‚ú®');
        closeEditModal();
        
        // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
        setTimeout(() => {
            loadHomework();
        }, 500);
        
    } catch (error) {
        console.error('Error updating homework:', error);
        showError('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç');
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏õ‡∏¥‡∏î Modal
function closeEditModal() {
    const modal = document.getElementById('editModal');
    if (modal) {
        modal.remove();
    }
}

// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏±‡πâ‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
function setTodayDate() {
    const today = new Date().toISOString().split('T')[0];
    document.getElementById('homeworkAssignDate').value = today;
}

// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô (optional)
function playSuccessSound() {
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÅ‡∏ö‡∏ö‡πÄ‡∏ö‡∏≤ ‡πÜ
    const audioContext = new (window.AudioContext || window.webkitAudioContext)();
    const oscillator = audioContext.createOscillator();
    const gainNode = audioContext.createGain();
    
    oscillator.connect(gainNode);
    gainNode.connect(audioContext.destination);
    
    oscillator.frequency.value = 800;
    oscillator.type = 'sine';
    gainNode.gain.setValueAtTime(0.3, audioContext.currentTime);
    gainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + 0.3);
    
    oscillator.start(audioContext.currentTime);
    oscillator.stop(audioContext.currentTime + 0.3);
}

// ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡πÇ‡∏´‡∏•‡∏î
document.addEventListener('DOMContentLoaded', function() {
    setTodayDate();
});